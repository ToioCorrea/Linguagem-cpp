OPPERADOR DE ATRIBUIÇÃO

Representa a atribuição da expressão á sua direita á variável á sua esquerda
EXS:
x = 2000;
x = y = 3 
y = (x = 3)

//////////////////////////////////////////////////////////////////////////////////////////////////////

OPERADORES ARITMÉTICOS 

BINÁRIOS:
+ Soma
- Subtração
* Multiplicação
/ Divisão
% Módulo

UNÁRIO:
-  Menos UNÁRIO

x op= exp  EQUIVALE A x = x op (exp)

EXEMPLOS:

i += 2;     equivale a   i = i +2;
x *= y+1    equivale a   x = x* (y+1)
t /= 2.5    equivale a   t = t / 2.5;
p %= 5      equivale a   p = p % 5;
d -= 3      equivale a   d = d - 3;

EXEMPLO:
#include <iostream>
void main()
{
    float nota,media = 0.0;
    cout << "\nDigite a primeira nota: ";
    cin >> nota;
    media += nota;

    cout << "\nDigite a segunda nota: ";
    cin >> nota;
    media += nota;

    cout << "\nDigite a terceira nota: ";
    cin >> nota;
    media += nota;

    cout << "\nDigite a quarta nota: ";
    cin >> nota;
    media += nota;

    media \= 4.0;
    cout << "\nMÉDIA: ' << media;

}


//////////////////////////////////////////////////////////////////////////////////////////////////////

PRECEDÊNCIA

n = Z + Y * x
O operador * tem precedência a do operado +

n = (z + y) * x.
As expressão com Parênteses são avaliadas primeiro


Os operadoradores unários têm precedência sobre os operadores binários:
EQUIVALENTE:
X = a * b++
X = a * (b++)


Operadores aritméticos são avaliados antes dos RELACIONAIS

ENTRADA:
#include <iostream>
void main()
{
    cout << "\n" << (4+1<3) ;
    cout << "\n" << (2<1+3) ;
}
SAÍDA:
0
1

//////////////////////////////////////////////////////////////////////////////////////////////////////

OPERADOR MENOS UNÁRIO: -

Indica somente troca de sinal. Como se multiplicasse o operador por -1
EX:
x = -8;
x = -x;

x será 8.

//////////////////////////////////////////////////////////////////////////////////////////////////////

LENDO COM cin E O OPERADOR DE EXTRAÇÃO >>

cin = manipula toda entrada do teclado por meio do operador de extração >> que conecta a entrada de dados á variável que conterá.

EX:

ENTRADA:
#include <iostream.h>
void main()
{
    cout << '\nDigite a sua idade rm anos: " ;
    int anos;

    cin >> anos; // O operador >> toma o valor do objeto á sua esquerda e coloca na variável á direita

    cout << "\nA sua idade em dias é: << (anos * 365);
}
SAIDA:
Digite a sua idade em anos: 4
A sua idade em dias é: 1460


//////////////////////////////////////////////////////////////////////////////////////////////////////

MULTIPLAS ENTRADAS COM cin 

#include <iostream>
void main()
{
    cout << '\nDigite as notas das 4 provas: " ;
    float p1,p2,p3,p4;

    cin >> p1 >> p2 >> p3 >> p4 ; 

    float media = (p1+p2+p3+p4) / 4.0;
    cout << "\nMÉDIA: " << media;
}
SAÍDA:
Digite as notas das 4 provas: 5.5 7.5 3.0 6.0
MÉDIA: 5.5

OBS: Multiplas entradas são digitadas separadas por um espaço em branco

//////////////////////////////////////////////////////////////////////////////////////////////////////

O QUALIFICADOR const

#include <iostream>
void main()
{
    const char bip = '\a';
    const double pi = 3.141592;
    double raio;

    cout << "\nDigite o raio da esfera: " ; 
    cin >> raio;

    double area =   4.0 * pi * raio * raio;

    cout << bip << bip;
    cout << "\nArea da esfera = " << area;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////

CONVERSÕES DE TIPOS E O OPERADOR DE MOLDE 

Imprimir o valor numérico de um caractere da tabela ASCII.

char ch = 'A';
cout << int(ch); //Imprime 65

Podemos usar:
(int)ch ou int(ch)

//////////////////////////////////////////////////////////////////////////////////////////////////////

OPERADORES DE INCREMENTO E DECREMENTO

incremento(++) =  Adiciona 1  á variável
decremento(--) =  Diminui  1  á variável

prefixado  = aparece antes do nome da variável
pós-fixado = aparece em seguida ao nome da variável

EQUIVALENTE: Adiciona 1
x = x + 1 ; 
++X;
X++;

EXEMPLOS:

ENTRADA:
n = 5;
x = ++n;

count << '\nN=" << n << "   X=" << x;
SAÍDA:
N=6 X=6

ENTRADA:
n = 5;
x = n++;
cout << "\nN=" << n << "    X=" << x;
SAÍDA:
N=6    X=5

//////////////////////////////////////////////////////////////////////////////////////////////////////

OPERADORES RELACIONAIS

> maior
>= maior igual
< menor
<= menor igual
== igual
!= diferente

//////////////////////////////////////////////////////////////////////////////////////////////////////

OPERADORES LÓGICOS

&& lógico E 
|| lógico OU 
! lógico NÃO 

//////////////////////////////////////////////////////////////////////////////////////////////////////

OPERADOR CONDICIONAL TERNÁRIO

exp1 ? exp2 : exp3

EXEMPLO:

max (a > b) ? a: b;
a variável com maior valor numérico entre a e b será atribuída a max

//////////////////////////////////////////////////////////////////////////////////////////////////////





